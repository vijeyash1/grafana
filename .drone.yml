---
depends_on: []
kind: pipeline
name: pr-test
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - yarn install --immutable
  depends_on:
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - ls -la node_modules/.cache/
  - yarn run ci:test-frontend
  depends_on:
  - yarn-install
  environment:
    BETTERER_CACHE: .betterer.cache
    TEST_MAX_WORKERS: 50%
  image: grafana/build-container:1.5.4
  name: test-frontend
- depends_on:
  - test-frontend
  image: meltwater/drone-cache:v1.2.2
  name: rebuild-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - .betterer.cache
    rebuild: "true"
  when:
    event: pull_request
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
depends_on: []
kind: pipeline
name: pr-build-e2e
platform:
  arch: amd64
  os: linux
services: []
steps:
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - yarn install --immutable
  depends_on:
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - ./bin/grabpl build-frontend --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_MODULES: /drone/src/node_modules
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend
- commands:
  - ./bin/grabpl build-frontend-packages --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend-packages
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
depends_on: []
kind: pipeline
name: pr-integration-tests
platform:
  arch: amd64
  os: linux
services:
- environment:
    PGDATA: /var/lib/postgresql/data/pgdata
    POSTGRES_DB: grafanatest
    POSTGRES_PASSWORD: grafanatest
    POSTGRES_USER: grafanatest
  image: postgres:12.3-alpine
  name: postgres
  volumes:
  - name: postgres
    path: /var/lib/postgresql/data/pgdata
- environment:
    MYSQL_DATABASE: grafana_tests
    MYSQL_PASSWORD: password
    MYSQL_ROOT_PASSWORD: rootpass
    MYSQL_USER: grafana
  image: mysql:5.6.48
  name: mysql
  volumes:
  - name: mysql
    path: /var/lib/mysql
steps:
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - apt-get update
  - apt-get install -yq postgresql-client
  - dockerize -wait tcp://postgres:5432 -timeout 120s
  - psql -p 5432 -h postgres -U grafanatest -d grafanatest -f devenv/docker/blocks/postgres_tests/setup.sql
  - go clean -testcache
  - ./bin/grabpl integration-tests --database postgres
  depends_on:
  - grabpl
  environment:
    GRAFANA_TEST_DB: postgres
    PGPASSWORD: grafanatest
    POSTGRES_HOST: postgres
  image: grafana/build-container:1.5.4
  name: postgres-integration-tests
- commands:
  - apt-get update
  - apt-get install -yq default-mysql-client
  - dockerize -wait tcp://mysql:3306 -timeout 120s
  - cat devenv/docker/blocks/mysql_tests/setup.sql | mysql -h mysql -P 3306 -u root
    -prootpass
  - go clean -testcache
  - ./bin/grabpl integration-tests --database mysql
  depends_on:
  - grabpl
  environment:
    GRAFANA_TEST_DB: mysql
    MYSQL_HOST: mysql
  image: grafana/build-container:1.5.4
  name: mysql-integration-tests
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
- name: postgres
  temp:
    medium: memory
- name: mysql
  temp:
    medium: memory
---
depends_on: []
kind: pipeline
name: pr-docs
platform:
  arch: amd64
  os: linux
services: []
steps:
- image: meltwater/drone-cache:v1.2.2
  name: restore-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    - .betterer.cache
    restore: "true"
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - yarn install --immutable
  depends_on:
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - |-
    echo -e "unknwon
    referer
    errorstring
    eror
    iam
    wan" > words_to_ignore.txt
  - codespell -I words_to_ignore.txt docs/
  - rm words_to_ignore.txt
  image: grafana/build-container:1.5.4
  name: codespell
- commands:
  - yarn run prettier:checkDocs
  depends_on:
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: lint-docs
- commands:
  - ./bin/grabpl build-frontend-packages --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend-packages
- commands:
  - ./scripts/ci-reference-docs-lint.sh ci
  depends_on:
  - build-frontend-packages
  image: grafana/build-container:1.5.4
  name: build-frontend-docs
- commands:
  - mkdir -p /hugo/content/docs/grafana
  - cp -r docs/sources/* /hugo/content/docs/grafana/latest/
  - cd /hugo && make prod
  depends_on:
  - build-frontend-docs
  image: grafana/docs-base:latest
  name: build-docs-website
trigger:
  event:
  - pull_request
  paths:
    include:
    - docs/**
    - packages/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: github_token
---
get:
  name: machine-user-token
  path: infra/data/ci/drone
kind: secret
name: drone_token
---
get:
  name: bucket
  path: infra/data/ci/grafana/prerelease
kind: secret
name: prerelease_bucket
---
get:
  name: credentials.json
  path: infra/data/ci/grafana/releng/artifacts-uploader-service-account
kind: secret
name: gcp_upload_artifacts_key
---
get:
  name: credentials.json
  path: infra/data/ci/terraform/google
kind: secret
name: tf_google_credentials
---
get:
  name: access-key
  path: infra/data/ci/test-drone-caching
kind: secret
name: access_key
---
get:
  name: secret
  path: infra/data/ci/test-drone-caching
kind: secret
name: secret
---
kind: signature
hmac: 9b16ff12b51aca3919e5abf7b327c37535a8489c1c3e0d4444f4003e525f211e

...
