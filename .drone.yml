---
depends_on: []
kind: pipeline
name: pr-test
platform:
  arch: amd64
  os: linux
services: []
steps:
- image: meltwater/drone-cache:v1.2.2
  name: restore-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    - .betterer.cache
    restore: "true"
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - make gen-go
  image: grafana/build-container:1.5.4
  name: wire-install
- commands:
  - yarn install --immutable
  depends_on:
  - restore-cache
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - ./bin/grabpl verify-drone
  depends_on:
  - grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: lint-drone
- commands:
  - |-
    echo -e "unknwon
    referer
    errorstring
    eror
    iam
    wan" > words_to_ignore.txt
  - codespell -I words_to_ignore.txt docs/
  - rm words_to_ignore.txt
  image: grafana/build-container:1.5.4
  name: codespell
- commands:
  - ./bin/grabpl shellcheck
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: shellcheck
- commands:
  - ./bin/grabpl lint-backend --edition oss
  depends_on:
  - wire-install
  environment:
    CGO_ENABLED: "1"
  image: grafana/build-container:1.5.4
  name: lint-backend
- commands:
  - yarn run prettier:check
  - yarn run lint
  - yarn run i18n:compile
  - yarn run typecheck
  depends_on:
  - yarn-install
  environment:
    TEST_MAX_WORKERS: 50%
  image: grafana/build-container:1.5.4
  name: lint-frontend
- commands:
  - ./bin/grabpl test-backend --edition oss
  depends_on:
  - wire-install
  image: grafana/build-container:1.5.4
  name: test-backend
- commands:
  - ./bin/grabpl integration-tests --edition oss
  depends_on:
  - wire-install
  image: grafana/build-container:1.5.4
  name: test-backend-integration
- commands:
  - yarn run ci:test-frontend
  depends_on:
  - yarn-install
  environment:
    BETTERER_CACHE: .betterer.cache
    TEST_MAX_WORKERS: 50%
  image: grafana/build-container:1.5.4
  name: test-frontend
- depends_on:
  - test-frontend
  image: meltwater/drone-cache:v1.2.2
  name: rebuild-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - .betterer.cache
    rebuild: "true"
  when:
    event: pull_request
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
depends_on: []
kind: pipeline
name: pr-build-e2e
platform:
  arch: amd64
  os: linux
services: []
steps:
- image: meltwater/drone-cache:v1.2.2
  name: restore-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    - .betterer.cache
    restore: "true"
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - make gen-go
  image: grafana/build-container:1.5.4
  name: wire-install
- commands:
  - yarn install --immutable
  depends_on:
  - restore-cache
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - ./bin/grabpl build-backend --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
    --variants linux-amd64,linux-amd64-musl,darwin-amd64,windows-amd64,armv6
  depends_on:
  - gen-version
  - wire-install
  image: grafana/build-container:1.5.4
  name: build-backend
- commands:
  - ./bin/grabpl build-frontend --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_MODULES: /drone/src/node_modules
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend
- commands:
  - ./bin/grabpl build-frontend-packages --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend-packages
- depends_on:
  - build-frontend
  - build-frontend-packages
  - yarn-install
  image: meltwater/drone-cache:v1.2.2
  name: rebuild-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    - .betterer.cache
    rebuild: "true"
  when:
    event: pull_request
- commands:
  - ./bin/grabpl build-plugins --jobs 8 --edition oss
  depends_on:
  - gen-version
  - yarn-install
  environment: null
  image: grafana/build-container:1.5.4
  name: build-plugins
- commands:
  - ./bin/linux-amd64/grafana-cli cue validate-schema --grafana-root .
  depends_on:
  - build-backend
  image: grafana/build-container:1.5.4
  name: validate-scuemata
- commands:
  - '# It is required that the generated Typescript be in sync with the input CUE
    files.'
  - '# To enforce this, the following command will attempt to generate Typescript
    from all'
  - '# appropriate .cue files, then compare with the corresponding (*.gen.ts) file
    the generated'
  - '# code would have been written to. It exits 1 if any diffs are found.'
  - ./bin/linux-amd64/grafana-cli cue gen-ts --grafana-root . --diff
  depends_on:
  - validate-scuemata
  image: grafana/build-container:1.5.4
  name: ensure-cuetsified
- commands:
  - . scripts/build/gpg-test-vars.sh && ./bin/grabpl package --jobs 8 --edition oss
    --build-id ${DRONE_BUILD_NUMBER} --variants linux-amd64,linux-amd64-musl,darwin-amd64,windows-amd64,armv6
  depends_on:
  - build-plugins
  - build-backend
  - build-frontend
  - build-frontend-packages
  environment: null
  image: grafana/build-container:1.5.4
  name: package
- commands:
  - ./scripts/grafana-server/start-server
  depends_on:
  - build-plugins
  - build-backend
  - build-frontend
  - build-frontend-packages
  detach: true
  environment:
    ARCH: linux-amd64
    PORT: 3001
  image: grafana/build-container:1.5.4
  name: grafana-server
- commands:
  - apt-get install -y netcat
  - ./bin/grabpl e2e-tests --port 3001 --suite dashboards-suite
  depends_on:
  - grafana-server
  environment:
    HOST: grafana-server
  image: cypress/included:9.5.1-node16.14.0-slim-chrome99-ff97
  name: end-to-end-tests-dashboards-suite
- commands:
  - apt-get install -y netcat
  - ./bin/grabpl e2e-tests --port 3001 --suite smoke-tests-suite
  depends_on:
  - grafana-server
  environment:
    HOST: grafana-server
  image: cypress/included:9.5.1-node16.14.0-slim-chrome99-ff97
  name: end-to-end-tests-smoke-tests-suite
- commands:
  - apt-get install -y netcat
  - ./bin/grabpl e2e-tests --port 3001 --suite panels-suite
  depends_on:
  - grafana-server
  environment:
    HOST: grafana-server
  image: cypress/included:9.5.1-node16.14.0-slim-chrome99-ff97
  name: end-to-end-tests-panels-suite
- commands:
  - apt-get install -y netcat
  - ./bin/grabpl e2e-tests --port 3001 --suite various-suite
  depends_on:
  - grafana-server
  environment:
    HOST: grafana-server
  image: cypress/included:9.5.1-node16.14.0-slim-chrome99-ff97
  name: end-to-end-tests-various-suite
- commands:
  - apt-get update
  - apt-get install -yq zip
  - ls -lah ./e2e
  - find ./e2e -type f -name "*.mp4"
  - printenv GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY > /tmp/gcpkey_upload_artifacts.json
  - gcloud auth activate-service-account --key-file=/tmp/gcpkey_upload_artifacts.json
  - find ./e2e -type f -name "*spec.ts.mp4" | zip e2e/videos.zip -@
  - gsutil cp e2e/videos.zip gs://$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip
  - export E2E_ARTIFACTS_VIDEO_ZIP=https://storage.googleapis.com/$${E2E_TEST_ARTIFACTS_BUCKET}/${DRONE_BUILD_NUMBER}/artifacts/videos/videos.zip
  - 'echo "E2E Test artifacts uploaded to: $${E2E_ARTIFACTS_VIDEO_ZIP}"'
  - 'curl -X POST https://api.github.com/repos/${DRONE_REPO}/statuses/${DRONE_COMMIT_SHA}
    -H "Authorization: token $${GITHUB_TOKEN}" -d "{\"state\":\"success\",\"target_url\":\"$${E2E_ARTIFACTS_VIDEO_ZIP}\",
    \"description\": \"Click on the details to download e2e recording videos\", \"context\":
    \"e2e_artifacts\"}"'
  depends_on:
  - end-to-end-tests-dashboards-suite
  - end-to-end-tests-panels-suite
  - end-to-end-tests-smoke-tests-suite
  - end-to-end-tests-various-suite
  environment:
    E2E_TEST_ARTIFACTS_BUCKET: releng-pipeline-artifacts-dev
    GCP_GRAFANA_UPLOAD_ARTIFACTS_KEY:
      from_secret: gcp_upload_artifacts_key
    GITHUB_TOKEN:
      from_secret: github_token
  image: google/cloud-sdk:367.0.0
  name: e2e-tests-artifacts-upload
  when:
    status:
    - success
    - failure
- commands:
  - yarn storybook:build
  - ./bin/grabpl verify-storybook
  depends_on:
  - build-frontend
  - build-frontend-packages
  environment:
    NODE_OPTIONS: --max_old_space_size=4096
  image: grafana/build-container:1.5.4
  name: build-storybook
- commands:
  - yarn wait-on http://$HOST:$PORT
  - pa11y-ci --config .pa11yci-pr.conf.js
  depends_on:
  - grafana-server
  environment:
    GRAFANA_MISC_STATS_API_KEY:
      from_secret: grafana_misc_stats_api_key
    HOST: grafana-server
    PORT: 3001
  failure: always
  image: grafana/docker-puppeteer:1.0.0
  name: test-a11y-frontend
- commands:
  - ls dist/*.tar.gz*
  - cp dist/*.tar.gz* packaging/docker/
  depends_on:
  - package
  image: grafana/build-container:1.5.4
  name: copy-packages-for-docker
- commands:
  - ./bin/grabpl build-docker --edition oss -archs amd64
  depends_on:
  - copy-packages-for-docker
  environment:
    GCP_KEY:
      from_secret: gcp_key
  image: google/cloud-sdk
  name: build-docker-images
  volumes:
  - name: docker
    path: /var/run/docker.sock
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
depends_on: []
kind: pipeline
name: pr-integration-tests
platform:
  arch: amd64
  os: linux
services:
- environment:
    PGDATA: /var/lib/postgresql/data/pgdata
    POSTGRES_DB: grafanatest
    POSTGRES_PASSWORD: grafanatest
    POSTGRES_USER: grafanatest
  image: postgres:12.3-alpine
  name: postgres
  volumes:
  - name: postgres
    path: /var/lib/postgresql/data/pgdata
- environment:
    MYSQL_DATABASE: grafana_tests
    MYSQL_PASSWORD: password
    MYSQL_ROOT_PASSWORD: rootpass
    MYSQL_USER: grafana
  image: mysql:5.6.48
  name: mysql
  volumes:
  - name: mysql
    path: /var/lib/mysql
steps:
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - apt-get update
  - apt-get install -yq postgresql-client
  - dockerize -wait tcp://postgres:5432 -timeout 120s
  - psql -p 5432 -h postgres -U grafanatest -d grafanatest -f devenv/docker/blocks/postgres_tests/setup.sql
  - go clean -testcache
  - ./bin/grabpl integration-tests --database postgres
  depends_on:
  - grabpl
  environment:
    GRAFANA_TEST_DB: postgres
    PGPASSWORD: grafanatest
    POSTGRES_HOST: postgres
  image: grafana/build-container:1.5.4
  name: postgres-integration-tests
- commands:
  - apt-get update
  - apt-get install -yq default-mysql-client
  - dockerize -wait tcp://mysql:3306 -timeout 120s
  - cat devenv/docker/blocks/mysql_tests/setup.sql | mysql -h mysql -P 3306 -u root
    -prootpass
  - go clean -testcache
  - ./bin/grabpl integration-tests --database mysql
  depends_on:
  - grabpl
  environment:
    GRAFANA_TEST_DB: mysql
    MYSQL_HOST: mysql
  image: grafana/build-container:1.5.4
  name: mysql-integration-tests
trigger:
  event:
  - pull_request
  paths:
    exclude:
    - docs/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
- name: postgres
  temp:
    medium: memory
- name: mysql
  temp:
    medium: memory
---
depends_on: []
kind: pipeline
name: pr-docs
platform:
  arch: amd64
  os: linux
services: []
steps:
- image: meltwater/drone-cache:v1.2.2
  name: restore-cache
  pull: always
  settings:
    backend: gcs
    bucket: test-julien
    cache_key: test123
    json_key:
      from_secret: tf_google_credentials
    mount:
    - yarncache
    - node_modules
    - .betterer.cache
    restore: "true"
- commands:
  - mkdir -p bin
  - curl -fL -o bin/grabpl https://grafana-downloads.storage.googleapis.com/grafana-build-pipeline/v2.9.41/grabpl
  - chmod +x bin/grabpl
  image: byrnedo/alpine-curl:0.1.8
  name: grabpl
- commands:
  - echo $DRONE_RUNNER_NAME
  image: alpine:3.15
  name: identify-runner
- commands:
  - ./bin/grabpl gen-version --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - grabpl
  image: grafana/build-container:1.5.4
  name: gen-version
- commands:
  - yarn install --immutable
  depends_on:
  - restore-cache
  - grabpl
  environment:
    YARN_CACHE_FOLDER: /drone/src/yarncache
  image: grafana/build-container:1.5.4
  name: yarn-install
- commands:
  - |-
    echo -e "unknwon
    referer
    errorstring
    eror
    iam
    wan" > words_to_ignore.txt
  - codespell -I words_to_ignore.txt docs/
  - rm words_to_ignore.txt
  image: grafana/build-container:1.5.4
  name: codespell
- commands:
  - yarn run prettier:checkDocs
  depends_on:
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: lint-docs
- commands:
  - ./bin/grabpl build-frontend-packages --jobs 8 --edition oss --build-id ${DRONE_BUILD_NUMBER}
  depends_on:
  - gen-version
  - yarn-install
  environment:
    NODE_OPTIONS: --max_old_space_size=8192
  image: grafana/build-container:1.5.4
  name: build-frontend-packages
- commands:
  - ./scripts/ci-reference-docs-lint.sh ci
  depends_on:
  - build-frontend-packages
  image: grafana/build-container:1.5.4
  name: build-frontend-docs
- commands:
  - mkdir -p /hugo/content/docs/grafana
  - cp -r docs/sources/* /hugo/content/docs/grafana/latest/
  - cd /hugo && make prod
  depends_on:
  - build-frontend-docs
  image: grafana/docs-base:latest
  name: build-docs-website
trigger:
  event:
  - pull_request
  paths:
    include:
    - docs/**
    - packages/**
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: github_token
---
get:
  name: machine-user-token
  path: infra/data/ci/drone
kind: secret
name: drone_token
---
get:
  name: bucket
  path: infra/data/ci/grafana/prerelease
kind: secret
name: prerelease_bucket
---
get:
  name: credentials.json
  path: infra/data/ci/grafana/releng/artifacts-uploader-service-account
kind: secret
name: gcp_upload_artifacts_key
---
get:
  name: credentials.json
  path: infra/data/ci/terraform/google
kind: secret
name: tf_google_credentials
---
get:
  name: access-key
  path: infra/data/ci/test-drone-caching
kind: secret
name: access_key
---
get:
  name: secret
  path: infra/data/ci/test-drone-caching
kind: secret
name: secret
---
kind: signature
hmac: 87ea65c6194d1897f40164ff1dfb582d305add2e747b81f37a71f1d691b6f786

...
